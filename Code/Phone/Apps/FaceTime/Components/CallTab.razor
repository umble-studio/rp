@namespace Rp.Phone.Apps.FaceTime.Components
@using System
@using Rp.Phone.UI.Components
@using Rp.Phone.Apps.Messages.Components
@inherits PhoneNavigationPage

<root>
	<img src="textures/ui/phone/woman_02.jpg" alt="">
	<div class="gradient"></div>
	<div class="content">
		<MessageBar Theme="@PhoneTheme.Transparent">
			<Content>
				<div class="header">
					<div class="left">
						<Button Icon="fluent:chevron-left-24-filled" IconColor="white" Theme="@PhoneTheme.Transparent"
						        @onclick="@OnBack"></Button>
					</div>
					<div class="right">
						<Button Icon="fluent:info-24-regular" IconColor="white" Theme="@PhoneTheme.Transparent"
						        @onclick="@OnContactInfo"></Button>
					</div>
				</div>
			</Content>
		</MessageBar>
		<div class="contact-info">
			@if ( _callSession is not null )
			{
				<span class="time">@GetCallDuration()</span>
				
				var imTheCaller = Caller?.ContactNumber == Phone.LocalContact.ContactNumber;
				
				@if ( imTheCaller )
				{
					if ( Callee is not null )
					{
						<span class="name">@Callee.ContactName</span>
					}
					else
					{
						<span class="name">@_callSession.Callee</span>
					}
				}
				else
				{
					if ( Caller is not null )
					{
						<span class="name">@Caller.ContactName</span>
					}
					else
					{
						<span class="name">@_callSession.Caller</span>
					}
				}
			}
			else if ( _pendingPhoneContact is not null )
			{
				@if ( !string.IsNullOrEmpty( _pendingPhoneContact.ContactName ) )
				{
					<span class="name">@_pendingPhoneContact.ContactName</span>	
				}
				else
				{
					<span class="name">@_pendingPhoneContact.ContactNumber</span>
				}
			}
		</div>
		<div class="menu">
			<div class="first-column">
				<CircleButton Icon:Value="@_speakerIcon" Text="Speaker" CanToggled="@true"
				              ToggleChanged="@OnSpeakerClicked"></CircleButton>
				<CircleButton Icon="fluent:video-28-filled" Text="Video"></CircleButton>
				<CircleButton Icon:Value="@_muteIcon" Text="Mute" CanToggled="@true"
				              ToggleChanged="@OnMuteClicked"></CircleButton>
			</div>
			<div class="second-column">
				<CircleButton Icon="fluent:people-add-28-filled" Text="Add"></CircleButton>
				<CircleButton Icon="fluent:call-end-28-filled"
				              Text="End"
				              Clicked="@EndCall"></CircleButton>
				<CircleButton Icon="fluent:grid-dots-28-filled" Text="Keypad" Clicked="@OnKeypad"></CircleButton>
			</div>
		</div>
	</div>
</root>
